{"id":"../node_modules/valid.js/lib/lib/reduce.js","dependencies":[{"name":"C:\\Users\\apod\\Downloads\\Telegram Desktop\\ToDo-sass-2\\ToDoNew\\package.json","includedInParent":true,"mtime":1670347748974},{"name":"C:\\Users\\apod\\Downloads\\Telegram Desktop\\ToDo-sass-2\\ToDoNew\\node_modules\\valid.js\\package.json","includedInParent":true,"mtime":1670347748818},{"name":"C:\\Users\\apod\\Downloads\\Telegram Desktop\\ToDo-sass-2\\ToDoNew\\node_modules\\valid.js\\.babelrc","includedInParent":true,"mtime":1670347748818}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/* reduce(func, index, array)\n *\n * This method applies a function against an accumulator and each value of the array\n * (from left-to-right) to reduce it to a single value.\n *\n * @param func - function\n *      Function to execute on each value in the array, taking four arguments:\n *          function(previousValue, value)\n *          Example (ES2015):\n *            const func = (a, b) => a + b\n *\n * @param index\n *      The index of the current element being processed in the array.\n *\n * @param array - Array\n *      The array reduce was called upon.\n *\n * Example:\n *\n * const sum = (a, b) => a + b\n * const array = [1,2,3,4,5]\n * const result = reduce(sum, 0, array)\n * => result = 15\n *\n */\n\nvar reduce = exports.reduce = function reduce(func, index, array) {\n    if (Array.prototype.reduce) {\n        return Array.prototype.reduce.apply(array, [func, index]);\n    }\n\n    // Transform array to iterator es2015\n    var iterator = array[Symbol.iterator]();\n\n    // Recursive function\n    var go = function go(acc, iterable) {\n        var _iterable$next = iterable.next();\n\n        var value = _iterable$next.value;\n        var done = _iterable$next.done;\n\n        return done ? acc : go(func(acc, value), iterable);\n    };\n\n    // Call recursive function\n    return go(index, iterator);\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/valid.js/lib/lib/reduce.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}}],"sources":{"../node_modules/valid.js/lib/lib/reduce.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/* reduce(func, index, array)\n *\n * This method applies a function against an accumulator and each value of the array\n * (from left-to-right) to reduce it to a single value.\n *\n * @param func - function\n *      Function to execute on each value in the array, taking four arguments:\n *          function(previousValue, value)\n *          Example (ES2015):\n *            const func = (a, b) => a + b\n *\n * @param index\n *      The index of the current element being processed in the array.\n *\n * @param array - Array\n *      The array reduce was called upon.\n *\n * Example:\n *\n * const sum = (a, b) => a + b\n * const array = [1,2,3,4,5]\n * const result = reduce(sum, 0, array)\n * => result = 15\n *\n */\n\nvar reduce = exports.reduce = function reduce(func, index, array) {\n    if (Array.prototype.reduce) {\n        return Array.prototype.reduce.apply(array, [func, index]);\n    }\n\n    // Transform array to iterator es2015\n    var iterator = array[Symbol.iterator]();\n\n    // Recursive function\n    var go = function go(acc, iterable) {\n        var _iterable$next = iterable.next();\n\n        var value = _iterable$next.value;\n        var done = _iterable$next.done;\n\n        return done ? acc : go(func(acc, value), iterable);\n    };\n\n    // Call recursive function\n    return go(index, iterator);\n};"},"lineCount":52}},"error":null,"hash":"f3412be48a3fdb463c800f1ca9ba4b6d","cacheData":{"env":{}}}